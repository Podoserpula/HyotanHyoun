import React, { useState } from 'react'
import Image from 'next/image';
import ShapeChanger from './TabContents/Tab2Content';
import BackgroundColorPicker from './TabContents/BackgroundColorPicker';
import ShapeType from './TabContents/ShapeType';
import GourdResizer from './TabContents/Tab3Content';
import { motion, AnimatePresence } from "framer-motion";
import EyesType from './TabContents/Eyes';
import Preview from './Preview';


const TabMenu: React.FC = () => {
  const [activeTab, setActiveTab] = useState(0);
  const [fillColor, setFillColor] = useState("#FFFDDD");



  // タブの内容をここで定義
  const tabs = [
    {
      id: 1,
      title: (<div className="flex flex-col items-center"><svg width="40" height="40" viewBox="0 0 300 300" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M147.147 283.346C176.414 283.346 197.16 278.868 211.223 271.349C225.389 263.774 232.73 253.125 235.036 241.15C237.319 229.3 234.618 216.454 229.354 204.402C224.079 192.326 216.14 180.837 207.634 171.588C199.615 162.869 196.148 154.467 195.315 146.253C194.475 137.97 196.289 129.657 199.223 121.089C200.689 116.81 202.416 112.516 204.205 108.153C204.461 107.528 204.719 106.902 204.977 106.274C206.513 102.537 208.072 98.7464 209.491 94.941C212.806 86.0554 215.465 76.8414 215.465 67.337C215.465 48.4465 208.019 35.7671 195.453 27.9613C183.097 20.286 166.077 17.5 147.147 17.5C127.839 17.5 111.375 20.7943 99.6736 28.7592C87.8021 36.8402 81.1625 49.5029 81.1625 67.337C81.1625 76.3627 83.7599 85.0041 86.9653 93.3716C88.2397 96.6983 89.5843 99.9263 90.9177 103.127C93.0147 108.162 95.0841 113.13 96.8091 118.311C99.5788 126.63 101.249 134.97 100.275 143.681C99.3053 152.357 95.6888 161.61 87.5429 171.711C70.554 192.777 58.972 220.508 65.2082 243.352C68.3611 254.902 76.0223 264.977 89.3796 272.106C102.664 279.196 121.518 283.346 147.147 283.346Z" fill="white" stroke="red" strokeWidth="5" />
        <path d="M117.22 83.8263C124.512 83.8263 131.232 82.575 136.222 80.4543C138.712 79.3959 140.889 78.0717 142.479 76.4737C144.08 74.8655 145.21 72.8421 145.21 70.4935C145.21 68.1448 144.08 66.1214 142.479 64.5133C140.889 62.9153 138.712 61.591 136.222 60.5327C131.232 58.4119 124.512 57.1606 117.22 57.1606C109.927 57.1606 103.207 58.4119 98.217 60.5327C95.7266 61.591 93.5505 62.9153 91.96 64.5133C90.3594 66.1214 89.2288 68.1448 89.2288 70.4935C89.2288 72.8421 90.3594 74.8655 91.96 76.4737C93.5505 78.0717 95.7266 79.3959 98.217 80.4543C103.207 82.575 109.927 83.8263 117.22 83.8263Z" fill="white" stroke="#0D0D0D" strokeWidth="5" />
        <ellipse cx="117.222" cy="70.6458" rx="12.3812" ry="14.342" fill="#0D0D0D" />
        <path d="M182.767 83.8263C190.059 83.8263 196.779 82.575 201.769 80.4543C204.26 79.3959 206.436 78.0717 208.026 76.4737C209.627 74.8655 210.757 72.8421 210.757 70.4935C210.757 68.1448 209.627 66.1214 208.026 64.5133C206.436 62.9153 204.26 61.591 201.769 60.5327C196.779 58.4119 190.059 57.1606 182.767 57.1606C175.474 57.1606 168.754 58.4119 163.764 60.5327C161.274 61.591 159.098 62.9153 157.507 64.5133C155.907 66.1214 154.776 68.1448 154.776 70.4935C154.776 72.8421 155.907 74.8655 157.507 76.4737C159.098 78.0717 161.274 79.3959 163.764 80.4543C168.754 82.575 175.474 83.8263 182.767 83.8263Z" fill="white" stroke="#0D0D0D" strokeWidth="5" />
        <ellipse cx="182.767" cy="70.6458" rx="12.3812" ry="14.342" fill="#0D0D0D" />
      </svg>
        <span className="text-xs mt-2">体型</span> </div>
      ),
      content: <ShapeType />
    },
    {
      id: 2,
      title: <div className="flex flex-col items-center"><svg width="40" height="40" viewBox="0 0 300 300" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M147.147 283.346C176.414 283.346 197.16 278.868 211.223 271.349C225.389 263.774 232.73 253.125 235.036 241.15C237.319 229.3 234.618 216.454 229.354 204.402C224.079 192.326 216.14 180.837 207.634 171.588C199.615 162.869 196.148 154.467 195.315 146.253C194.475 137.97 196.289 129.657 199.223 121.089C200.689 116.81 202.416 112.516 204.205 108.153C204.461 107.528 204.719 106.902 204.977 106.274C206.513 102.537 208.072 98.7464 209.491 94.941C212.806 86.0554 215.465 76.8414 215.465 67.337C215.465 48.4465 208.019 35.7671 195.453 27.9613C183.097 20.286 166.077 17.5 147.147 17.5C127.839 17.5 111.375 20.7943 99.6736 28.7592C87.8021 36.8402 81.1625 49.5029 81.1625 67.337C81.1625 76.3627 83.7599 85.0041 86.9653 93.3716C88.2397 96.6983 89.5843 99.9263 90.9177 103.127C93.0147 108.162 95.0841 113.13 96.8091 118.311C99.5788 126.63 101.249 134.97 100.275 143.681C99.3053 152.357 95.6888 161.61 87.5429 171.711C70.554 192.777 58.972 220.508 65.2082 243.352C68.3611 254.902 76.0223 264.977 89.3796 272.106C102.664 279.196 121.518 283.346 147.147 283.346Z" fill="white" stroke="#0D0D0D" strokeWidth="5" />
        <path d="M117.22 83.8263C124.512 83.8263 131.232 82.575 136.222 80.4543C138.712 79.3959 140.889 78.0717 142.479 76.4737C144.08 74.8655 145.21 72.8421 145.21 70.4935C145.21 68.1448 144.08 66.1214 142.479 64.5133C140.889 62.9153 138.712 61.591 136.222 60.5327C131.232 58.4119 124.512 57.1606 117.22 57.1606C109.927 57.1606 103.207 58.4119 98.217 60.5327C95.7266 61.591 93.5505 62.9153 91.96 64.5133C90.3594 66.1214 89.2288 68.1448 89.2288 70.4935C89.2288 72.8421 90.3594 74.8655 91.96 76.4737C93.5505 78.0717 95.7266 79.3959 98.217 80.4543C103.207 82.575 109.927 83.8263 117.22 83.8263Z" fill="white" stroke="red" strokeWidth="5" />
        <ellipse cx="117.222" cy="70.6458" rx="12.3812" ry="14.342" fill="red" />
        <path d="M182.767 83.8263C190.059 83.8263 196.779 82.575 201.769 80.4543C204.26 79.3959 206.436 78.0717 208.026 76.4737C209.627 74.8655 210.757 72.8421 210.757 70.4935C210.757 68.1448 209.627 66.1214 208.026 64.5133C206.436 62.9153 204.26 61.591 201.769 60.5327C196.779 58.4119 190.059 57.1606 182.767 57.1606C175.474 57.1606 168.754 58.4119 163.764 60.5327C161.274 61.591 159.098 62.9153 157.507 64.5133C155.907 66.1214 154.776 68.1448 154.776 70.4935C154.776 72.8421 155.907 74.8655 157.507 76.4737C159.098 78.0717 161.274 79.3959 163.764 80.4543C168.754 82.575 175.474 83.8263 182.767 83.8263Z" fill="white" stroke="red" strokeWidth="5" />
        <ellipse cx="182.767" cy="70.6458" rx="12.3812" ry="14.342" fill="red" />
      </svg>
        <span className="text-xs mt-2">目型</span> </div>,
      content: <EyesType />
    },
    {
      id: 3,
      title: <div><Image src="/hyoun.png" alt="Tab 3" width={20} height={20} style={{ width: '100%', height: 'auto' }} /><span className="text-xs mt-2">体型</span></div>,
      content: <GourdResizer />
    },
    {
      id: 4,
      title: <Image src="/hyoun.png" alt="Tab 4" width={20} height={20} style={{ width: '100%', height: 'auto' }} />,
      content: <ShapeChanger />
    },
    {
      id: 5,
      title: <div><svg
        className="flex flex-col items-center"
        xmlns="http://www.w3.org/2000/svg"
        viewBox="0 0 100 100"
        width={24}
        height={24}
        preserveAspectRatio="none"
      >
        <rect x="0" y="0" width="100%" height="100%" fill={fillColor} /></svg><span className="text-xs mt-2">背景</span></div>,
      content: <BackgroundColorPicker bgColor={fillColor} onChange={setFillColor} />
    },
  ];

  return (

    <div className="w-full flex flex-col items-center">



      {/* 背景 */}
      {/* <svg
        className=" absolute top-20"
        xmlns="http://www.w3.org/2000/svg"
        viewBox="0 0 100 100"
        width="430"
        height="430"
        preserveAspectRatio="none"
      >
        <rect x="0" y="0" width="100%" height="100%" fill={fillColor} />
      </svg> */}
      <div className="h-80"></div>

      <div className="absolute z-10 top-50">

      </div>


      {/* タブメニュー */}
      <div className="flex border-b-2 mb-4">
        {
          tabs.map((tab, index) => (
            <button
              key={index}
              onClick={() => setActiveTab(index)}
              className={`px-6 py-2 text-lg ${activeTab === index
                ? "border-b-4 border-blue-500 text-blue-500"
                : "text-gray-500"
                }`}
            >
              {tab.title}
            </button>
          ))
        }
      </div>

      {/* アクティブなタブのコンテンツ */}
      <div className="p-4 border border-gray-300 rounded-md">
        {tabs[activeTab].content}
      </div>


    </div>


  );
};

export default TabMenu;
